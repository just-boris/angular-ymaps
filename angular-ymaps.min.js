angular.module("ymaps",[]).factory("$script",["$q","$rootScope",function(e,n){"use strict";function t(e,n){var t=document.createElement("script");t.onload=t.onreadystatechange=function(){t.readyState&&"complete"!==t.readyState&&"loaded"!==t.readyState||(t.onload=t.onreadystatechange=null,angular.isFunction(n)&&n())},t.async=!0,t.src=e,document.getElementsByTagName("body")[0].appendChild(t)}var o=[],r={};return function(a){var i=e.defer();if(-1!==o.indexOf(a))i.resolve();else{if(r[a])return r[a];t(a,function(){delete r[a],o.push(a),n.$apply(function(){i.resolve()})}),r[a]=i.promise}return i.promise}}]).factory("ymapsLoader",["$window","$timeout","$script","ymapsConfig",function(e,n,t,o){"use strict";var r;return{ready:function(a){r||(r=t(o.apiUrl).then(function(){return e.ymaps})),r.then(function(e){e.ready(function(){n(function(){a(e)})})})}}}]).constant("ymapsConfig",{apiUrl:"//api-maps.yandex.ru/2.1/?load=package.standard,package.clusters&mode=release&lang=ru-RU&ns=ymaps",mapBehaviors:["default"],mapControls:["default"],markerOptions:{preset:"islands#darkgreenIcon"},clusterOptions:{preset:"islands#darkGreenClusterIcons"},fitMarkers:!0,fitMarkersZoomMargin:40,clusterize:!1}).value("debounce",function(e,n){"use strict";var t=null;return function(){var o=this,r=arguments;clearTimeout(t),t=setTimeout(function(){t=null,e.apply(o,r)},n)}}).controller("YmapController",["$scope","$element","ymapsLoader","ymapsConfig","debounce",function(e,n,t,o,r){"use strict";function a(n,t,a){t.events.add("boundschange",r(function(){if(t.getLength()>0){var r=n.options.get("maxZoom");n.options.set("maxZoom",e.zoom),n.setBounds(t.getBounds(),{checkZoomRange:!0,zoomMargin:o.fitMarkersZoomMargin}).then(function(){n.options.set("maxZoom",r),n.setZoom(n.getZoom())})}},100))}var i=this;t.ready(function(t){i.addMarker=function(n,o,r){var a=new t.Placemark(n,o,r);return e.markers.add(a),a},i.removeMarker=function(n){e.markers.remove(n)},i.map=new t.Map(n[0],{center:e.center||[0,0],zoom:e.zoom||0,behaviors:o.mapBehaviors,controls:o.mapControls});var r=new t.GeoObjectCollection({},o.markerOptions);o.clusterize?(e.markers=new t.Clusterer(o.clusterOptions),r.add(e.markers)):e.markers=r,i.map.geoObjects.add(r),o.fitMarkers&&a(i.map,r);var s,c;e.$watch("center",function(e){s||(c=!0,i.map.panTo(e).always(function(){c=!1}))},!0),e.$watch("zoom",function(e){s||i.map.setZoom(e,{checkZoomRange:!0})}),i.map.events.add("boundschange",function(n){c||(s=!0,e.$apply(function(){e.center=n.get("newCenter"),e.zoom=n.get("newZoom")}),s=!1)})})}]).directive("yandexMap",["ymapsLoader",function(e){"use strict";return{restrict:"EA",terminal:!0,transclude:!0,scope:{center:"=",zoom:"="},link:function(n,t,o,r,a){e.ready(function(){a(function(e){t.append(e)})})},controller:"YmapController"}}]).directive("ymapMarker",function(){"use strict";return{restrict:"EA",require:"^yandexMap",scope:{coordinates:"=",index:"=",properties:"=",options:"="},link:function(e,n,t,o){function r(){var n=[parseFloat(e.coordinates[0]),parseFloat(e.coordinates[1])];a&&o.removeMarker(a),a=o.addMarker(n,angular.extend({iconContent:e.index},e.properties),e.options)}var a;e.$watch("index",function(e){a&&a.properties.set("iconContent",e)}),e.$watch("coordinates",function(e){e&&r()},!0),e.$on("$destroy",function(){a&&o.removeMarker(a)})}}});